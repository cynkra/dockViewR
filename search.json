[{"path":"https://cynkra.github.io/dockViewR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 dockViewR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cynkra.github.io/dockViewR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Granjon. Author, maintainer. mathuo. Copyright holder.","code":""},{"path":"https://cynkra.github.io/dockViewR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Granjon D (2025). dockViewR: Layout Manager Widget R Shiny. R package version 0.0.0.9000, https://cynkra.github.io/dockViewR/, https://github.com/cynkra/dockViewR.","code":"@Manual{,   title = {dockViewR: Layout Manager Widget for R and Shiny},   author = {David Granjon},   year = {2025},   note = {R package version 0.0.0.9000, https://cynkra.github.io/dockViewR/},   url = {https://github.com/cynkra/dockViewR}, }"},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"dockviewr","dir":"","previous_headings":"","what":"Layout Manager Widget for R and Shiny","title":"Layout Manager Widget for R and Shiny","text":"goal dockViewR provide layout manager Shiny apps interactive R documents. builds top dockview.","code":""},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Layout Manager Widget for R and Shiny","text":"can install development version dockViewR like :","code":"pak::pak(\"cynkra/dockViewR\")"},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Layout Manager Widget for R and Shiny","text":"run demo app:","code":"library(dockViewR) shinyAppDir(system.file(\"examples/demo\", package = \"dockViewR\")) library(shiny) library(bslib) library(visNetwork)  nodes <- data.frame(id = 1:3) edges <- data.frame(from = c(1, 2), to = c(1, 3))  ui <- page_fillable(   dock_viewOutput(\"dock\") )  server <- function(input, output, session) {   output$dock <- renderDock_view({     dock_view(       panels = list(         panel(           id = \"1\",           title = \"Panel 1\",           content = tagList(             sliderInput(               \"obs\",               \"Number of observations:\",               min = 0,               max = 1000,               value = 500             ),             plotOutput(\"distPlot\")           )         ),         panel(           id = \"2\",           title = \"Panel 2\",           content = tagList(             visNetworkOutput(\"network\")           ),           position = list(             referencePanel = \"1\",             direction = \"right\"           ),           minimumWidth = 500         ),         panel(           id = \"3\",           title = \"Panel 3\",           content = tagList(             selectInput(               \"variable\",               \"Variable:\",               c(\"Cylinders\" = \"cyl\", \"Transmission\" = \"am\", \"Gears\" = \"gear\")             ),             tableOutput(\"data\")           ),           position = list(             referencePanel = \"2\",             direction = \"below\"           )         )       ),       theme = \"replit\"     )   })    output$distPlot <- renderPlot({     req(input$obs)     hist(rnorm(input$obs))   })    output$network <- renderVisNetwork({     visNetwork(nodes, edges, width = \"100%\")   })    output$data <- renderTable(     {       mtcars[, c(\"mpg\", input$variable), drop = FALSE]     },     rownames = TRUE   ) }  shinyApp(ui, server)"},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Layout Manager Widget for R and Shiny","text":"welcome contributions! ’d like help improve dockViewR, feel free submit issues, feature requests, pull requests.","code":""},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"knowledge-pre-requisites","dir":"","previous_headings":"Contributing","what":"Knowledge pre-requisites","title":"Layout Manager Widget for R and Shiny","text":"dockViewR htmlwidget, interactive widget R, powered JS library. get minimum starting kit: “Quick Dirty” intro JS R devs: https://rsc.cynkra.com/js4Shiny/#/welcome. htmlwidgets: https://www.htmlwidgets.org/develop_intro.html.","code":""},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"software-pre-requisite","dir":"","previous_headings":"Contributing","what":"Software pre-requisite","title":"Layout Manager Widget for R and Shiny","text":"contribute project, ’ll need npm, node, R package packer compile JavaScript code. Please follow slides attached help get started pre-requisites. project, following: JS code uses ES6 modules, meaning can define module srcjs/component.js script follows: use another script, let’s say ./otherscript.js like : Whenever done changing JS script, rebuild : may well bundle dev using packer::bundle_dev() developer mode ready production use packer::bundle_prod(). may also consider watch() watches changes srcjs rebuilds necessary, equivalent ⁠npm run watch⁠.","code":"pak::pak(\"packer\") # Restore JavaScript dependencies in package-lock.json (a bit like the renv.lock) packer::npm_install() export const blabla = () => {   console.log(\"Blabla\"); } // ./otherscript.js import { blabla } from './components.js' # Change the code and then rebundle packer::bundle(\"development\") # For developement mode packer::bundle() # For production. Defaut!"},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"debugging-steps","dir":"","previous_headings":"Contributing","what":"Debugging steps","title":"Layout Manager Widget for R and Shiny","text":"Whenever run app using dockViewR, like inst/examples/demo, open viewer web browser window (preferably Chrome used illustrate action step, browser devtools differ term layout). Right-click widget navigate inspect option drop-menu. top, tabs displayed, navigate Sources tab. Open sidepanel dockviewer/srcjs/widgets/dockview.js script . dockview.js script opened main panel. can set breakpoint line number script reload page.","code":""},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Layout Manager Widget for R and Shiny","text":"package built top amazing dockview JavaScript library.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for dock_view — dock_view-shiny","title":"Shiny bindings for dock_view — dock_view-shiny","text":"Output render functions using dock_view within Shiny applications interactive Rmd documents.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for dock_view — dock_view-shiny","text":"","code":"dock_viewOutput(outputId, width = \"100%\", height = \"400px\")  renderDock_view(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for dock_view — dock_view-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates dock_view env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view.html","id":null,"dir":"Reference","previous_headings":"","what":"Dock view widget — dock_view","title":"Dock view widget — dock_view","text":"Create dock view widget","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dock view widget — dock_view","text":"","code":"dock_view(   panels,   ...,   theme = c(\"light-spaced\", \"light\", \"abyss\", \"abyss-spaced\", \"dark\", \"vs\", \"dracula\",     \"replit\"),   width = NULL,   height = NULL,   elementId = NULL )"},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dock view widget — dock_view","text":"panels Widget configuration. Slot panel. ... options. See https://dockview.dev/docs/api/dockview/options. theme Theme. One c(\"abyss\", \"dark\", \"light\", \"vs\", \"dracula\", \"replit\"). width Widget width. height Widget height. elementId used outside Shiny.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"Dock view widget — dock_view","text":"example-1 Open Shinylive","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Dock panel — panel","title":"Dock panel — panel","text":"Create dock panel","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dock panel — panel","text":"","code":"panel(id, title, content, active = TRUE, ...)"},{"path":"https://cynkra.github.io/dockViewR/reference/panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dock panel — panel","text":"id Panel unique id. title Panel title. content Panel content. Can list Shiny tags. active active? ... options passed API. See https://dockview.dev/docs/api/dockview/panelApi.","code":""},{"path":"https://cynkra.github.io/dockViewR/news/index.html","id":"dockviewr-0009000","dir":"Changelog","previous_headings":"","what":"dockViewR 0.0.0.9000","title":"dockViewR 0.0.0.9000","text":"Initial CRAN submission.","code":""}]
