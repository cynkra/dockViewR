[{"path":"https://cynkra.github.io/dockViewR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 dockViewR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cynkra.github.io/dockViewR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Granjon. Author, maintainer. Nelson Stevens. Author. Nicolas Bennett. Author. mathuo. Copyright holder.","code":""},{"path":"https://cynkra.github.io/dockViewR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Granjon D, Stevens N, Bennett N (2025). dockViewR: Layout Manager Widget R Shiny. R package version 0.1.0, https://github.com/cynkra/dockViewR.","code":"@Manual{,   title = {dockViewR: Layout Manager Widget for R and Shiny},   author = {David Granjon and Nelson Stevens and Nicolas Bennett},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/cynkra/dockViewR}, }"},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"dockviewr","dir":"","previous_headings":"","what":"Layout Manager Widget for R and Shiny","title":"Layout Manager Widget for R and Shiny","text":"goal dockViewR provide layout manager Shiny apps interactive R documents. builds top dockview.","code":""},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Layout Manager Widget for R and Shiny","text":"can install development version dockViewR like :","code":"pak::pak(\"cynkra/dockViewR\")"},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Layout Manager Widget for R and Shiny","text":"run demo app:","code":"library(dockViewR) shinyAppDir(system.file(\"examples/demo\", package = \"dockViewR\")) library(shiny) library(bslib) library(visNetwork) library(dockViewR)  nodes <- data.frame(id = 1:3) edges <- data.frame(from = c(1, 2), to = c(1, 3))  ui <- page_fillable(   dock_viewOutput(\"dock\") )  server <- function(input, output, session) {   output$dock <- renderDock_view({     dock_view(       panels = list(         panel(           id = \"1\",           title = \"Panel 1\",           content = tagList(             sliderInput(               \"obs\",               \"Number of observations:\",               min = 0,               max = 1000,               value = 500             ),             plotOutput(\"distPlot\")           )         ),         panel(           id = \"2\",           title = \"Panel 2\",           content = tagList(             visNetworkOutput(\"network\")           ),           position = list(             referencePanel = \"1\",             direction = \"right\"           ),           minimumWidth = 500         ),         panel(           id = \"3\",           title = \"Panel 3\",           content = tagList(             selectInput(               \"variable\",               \"Variable:\",               c(\"Cylinders\" = \"cyl\", \"Transmission\" = \"am\", \"Gears\" = \"gear\")             ),             tableOutput(\"data\")           ),           position = list(             referencePanel = \"2\",             direction = \"below\"           )         )       ),       theme = \"replit\"     )   })    output$distPlot <- renderPlot({     req(input$obs)     hist(rnorm(input$obs))   })    output$network <- renderVisNetwork({     visNetwork(nodes, edges, width = \"100%\")   })    output$data <- renderTable(     {       mtcars[, c(\"mpg\", input$variable), drop = FALSE]     },     rownames = TRUE   ) }  shinyApp(ui, server)"},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Layout Manager Widget for R and Shiny","text":"welcome contributions! ’d like help improve dockViewR, feel free submit issues, feature requests, pull requests.","code":""},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"knowledge-pre-requisites","dir":"","previous_headings":"Contributing","what":"Knowledge pre-requisites","title":"Layout Manager Widget for R and Shiny","text":"dockViewR htmlwidget, interactive widget R, powered JS library. get minimum starting kit: “Quick Dirty” intro JS R devs: https://rsc.cynkra.com/js4Shiny/#/welcome. htmlwidgets: https://www.htmlwidgets.org/develop_intro.html.","code":""},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"software-pre-requisite","dir":"","previous_headings":"Contributing","what":"Software pre-requisite","title":"Layout Manager Widget for R and Shiny","text":"contribute project, ’ll need npm, node, R package packer compile JavaScript code. Please follow slides attached help get started pre-requisites. project, following: JS code uses ES6 modules, meaning can define module srcjs/component.js script follows: use another script, let’s say ./otherscript.js like : Whenever done changing JS script, rebuild : may well bundle dev using packer::bundle_dev() developer mode ready production use packer::bundle_prod(). may also consider watch() watches changes srcjs rebuilds necessary, equivalent ⁠npm run watch⁠.","code":"pak::pak(\"packer\") # Restore JavaScript dependencies in package-lock.json (a bit like the renv.lock) packer::npm_install() export const blabla = () => {   console.log(\"Blabla\"); } // ./otherscript.js import { blabla } from './components.js' # Change the code and then rebundle packer::bundle(\"development\") # For developement mode packer::bundle() # For production. Defaut!"},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"debugging-steps","dir":"","previous_headings":"Contributing","what":"Debugging steps","title":"Layout Manager Widget for R and Shiny","text":"Whenever run app using dockViewR, like inst/examples/demo, open viewer web browser window (preferably Chrome used illustrate action step, browser devtools differ term layout). Right-click widget navigate inspect option drop-menu. top, tabs displayed, navigate Sources tab. Open sidepanel dockviewer/srcjs/widgets/dockview.js script . dockview.js script opened main panel. can set breakpoint line number script reload page.","code":""},{"path":"https://cynkra.github.io/dockViewR/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Layout Manager Widget for R and Shiny","text":"package built top amazing dockview JavaScript library.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/add_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Panel dynamically — add_panel","title":"Add Panel dynamically — add_panel","text":"Add Panel dynamically","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/add_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Panel dynamically — add_panel","text":"","code":"add_panel(dock_id, panel, ..., session = getDefaultReactiveDomain())"},{"path":"https://cynkra.github.io/dockViewR/reference/add_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Panel dynamically — add_panel","text":"dock_id Dock unique id. using modules namespace automatically added. panel panel object. See panel different parameters. ... options passed API. used yet. session shiny session object. See https://dockview.dev/docs/api/dockview/panelApi.","code":""},{"path":[]},{"path":"https://cynkra.github.io/dockViewR/reference/dock-state.html","id":null,"dir":"Reference","previous_headings":"","what":"get dock — get_dock","title":"get dock — get_dock","text":"get dock get dock panels get dock panels ids get dock active group get dock grid get dock groups get dock groups ids get dock groups panels save dock restore dock","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/dock-state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get dock — get_dock","text":"","code":"get_dock(dock_id, session = getDefaultReactiveDomain())  get_panels(dock_id, session = getDefaultReactiveDomain())  get_panels_ids(dock_id, session = getDefaultReactiveDomain())  get_active_group(dock_id, session = getDefaultReactiveDomain())  get_grid(dock_id, session = getDefaultReactiveDomain())  get_groups(dock_id, session = getDefaultReactiveDomain())  get_groups_ids(dock_id, session = getDefaultReactiveDomain())  get_groups_panels(dock_id, session = getDefaultReactiveDomain())  save_dock(dock_id, session = getDefaultReactiveDomain())  restore_dock(dock_id, data, session = getDefaultReactiveDomain())"},{"path":"https://cynkra.github.io/dockViewR/reference/dock-state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get dock — get_dock","text":"dock_id Dock unique id. using modules namespace automatically added. session shiny session object. data Data representing serialised dock object.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/dock-state.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"get dock — get_dock","text":"works server side functions like add_panel. call UI.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/dockViewR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dockViewR: Layout Manager Widget for R and Shiny — dockViewR-package","title":"dockViewR: Layout Manager Widget for R and Shiny — dockViewR-package","text":"Provides R bindings 'dockview' JavaScript library. Create rearrangeable grid layouts seconds.","code":""},{"path":[]},{"path":"https://cynkra.github.io/dockViewR/reference/dockViewR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dockViewR: Layout Manager Widget for R and Shiny — dockViewR-package","text":"Maintainer: David Granjon dgranjon@ymail.com Authors: Nelson Stevens nelson.stevens92@gmail.com Nicolas Bennett nicolas@cynkra.com contributors: mathuo github.mathuo@gmail.com [copyright holder]","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for dock_view — dock_view-shiny","title":"Shiny bindings for dock_view — dock_view-shiny","text":"Output render functions using dock_view within Shiny applications interactive Rmd documents.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for dock_view — dock_view-shiny","text":"","code":"dock_viewOutput(outputId, width = \"100%\", height = \"400px\")  renderDock_view(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for dock_view — dock_view-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates dock_view env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view.html","id":null,"dir":"Reference","previous_headings":"","what":"Dock view widget — dock_view","title":"Dock view widget — dock_view","text":"Create dock view widget","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dock view widget — dock_view","text":"","code":"dock_view(   panels,   ...,   theme = c(\"light-spaced\", \"light\", \"abyss\", \"abyss-spaced\", \"dark\", \"vs\", \"dracula\",     \"replit\"),   width = NULL,   height = NULL,   elementId = NULL )"},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dock view widget — dock_view","text":"panels Widget configuration. Slot panel. ... options. See https://dockview.dev/docs/api/dockview/options. theme Theme. One c(\"abyss\", \"dark\", \"light\", \"vs\", \"dracula\", \"replit\"). width Widget width. height Widget height. elementId used outside Shiny.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/dock_view.html","id":"examples-in-shinylive","dir":"Reference","previous_headings":"","what":"Examples in Shinylive","title":"Dock view widget — dock_view","text":"example-1 Open Shinylive","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/move_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Move a group dynamically — move_group","title":"Move a group dynamically — move_group","text":"move_group moves group different position withing shiny server function. parameter refers group-id want moved. Likewise refers group-id group want select destination. difference move_group2 move_group move_group2 selects panel-id, whereas move_group selects group-id.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/move_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move a group dynamically — move_group","text":"","code":"move_group(   dock_id,   from,   to,   position = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://cynkra.github.io/dockViewR/reference/move_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move a group dynamically — move_group","text":"dock_id Dock unique id. using modules namespace automatically added. Group-id panel within group moved. Group-id panel within group want destination. position Group position options: one \"left\", \"right\", \"top\", \"bottom\", \"center\". session shiny session object. See https://dockview.dev/docs/api/dockview/panelApi.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/move_group2.html","id":null,"dir":"Reference","previous_headings":"","what":"Move a group dynamically — move_group2","title":"Move a group dynamically — move_group2","text":"move_group2 moves group different position withing shiny server function. parameter refers panel-id panel within group want move. Likewise refers panel-id panel within group want select . difference move_group2 move_group move_group2 selects panel-id, whereas move_group selects group-id.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/move_group2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move a group dynamically — move_group2","text":"","code":"move_group2(   dock_id,   from,   to,   position = NULL,   session = shiny::getDefaultReactiveDomain() )"},{"path":"https://cynkra.github.io/dockViewR/reference/move_group2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move a group dynamically — move_group2","text":"dock_id Dock unique id. using modules namespace automatically added. Panel-id panel within group moved. Panel-id panel within group want . position Group position options: one \"left\", \"right\", \"top\", \"bottom\", \"center\". session shiny session object. See https://dockview.dev/docs/api/dockview/panelApi.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/move_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Move Panel dynamically — move_panel","title":"Move Panel dynamically — move_panel","text":"Move Panel dynamically","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/move_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move Panel dynamically — move_panel","text":"","code":"move_panel(   dock_id,   id,   position = NULL,   group = NULL,   index = NULL,   session = getDefaultReactiveDomain() )"},{"path":"https://cynkra.github.io/dockViewR/reference/move_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move Panel dynamically — move_panel","text":"dock_id Dock unique id. using modules namespace automatically added. id Panel id. position Panel position options: one \"left\", \"right\", \"top\", \"bottom\", \"center\". group ID panel want move target . must belong different groups. index Panel index. panels belong group, can use index move target panel desired position. group left NULL, index must passed exceed total number panels negative. session shiny session object. See https://dockview.dev/docs/api/dockview/panelApi.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Dock panel — panel","title":"Dock panel — panel","text":"Create dock panel","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dock panel — panel","text":"","code":"panel(id, title, content, active = TRUE, ...)"},{"path":"https://cynkra.github.io/dockViewR/reference/panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dock panel — panel","text":"id Panel unique id. title Panel title. content Panel content. Can list Shiny tags. active active? ... options passed API. See https://dockview.dev/docs/api/dockview/panelApi. pass position, must list 2 fields: referencePanel: reference panel id. direction: one , , left, right within (, , left, right put panel new group, within puts panel reference panel group). Position relative reference panel target.","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/remove_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Panel dynamically — remove_panel","title":"Remove Panel dynamically — remove_panel","text":"Remove Panel dynamically","code":""},{"path":"https://cynkra.github.io/dockViewR/reference/remove_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Panel dynamically — remove_panel","text":"","code":"remove_panel(dock_id, id, session = getDefaultReactiveDomain())"},{"path":"https://cynkra.github.io/dockViewR/reference/remove_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Panel dynamically — remove_panel","text":"dock_id Dock unique id. using modules namespace automatically added. id Id panel removed. session shiny session object. See https://dockview.dev/docs/api/dockview/panelApi.","code":""},{"path":"https://cynkra.github.io/dockViewR/news/index.html","id":"dockviewr-010","dir":"Changelog","previous_headings":"","what":"dockViewR 0.1.0","title":"dockViewR 0.1.0","text":"Initial release","code":""}]
